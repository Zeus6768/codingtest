from sys import stdin
from itertools import combinations_with_replacement as cm
input = stdin.readline

def primes(n):
	is_prime = [True] * (n+1)
	for i in range(2, int(n**0.5)+1):
		if is_prime[i] == True:
			for j in range(i+i, n+1, i):
				is_prime[j] = False
	return [num for num in range(2, n+1) if is_prime[num]]

def solution(n):
	prime = primes(n)
	cm_prime = cm(prime, 2)

	sum_list = []
	for c in cm_prime:
		if sum(c) == n:
			sum_list.append(c)

	diff = 10000
	for s in sum_list:
		d = abs(s[0] - s[1])
		if d < diff:
			diff = d
			result = s
	return list(cm_prime)

def main():
	t = int(input())
	[print(solution(int(input()))) for i in range(t)]
	return

print(solution(10))